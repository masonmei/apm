<?xml version="1.0" encoding="UTF-8"?>
<included>

    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator"/>

    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>

    <property name="CONSOLE_LOG_PATTERN"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t{14}]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} [%X{requestId}][%X{currentUser}] %m%n%wex"/>
    <!-- MDC["currentUser"] set by AuthenticationFilter -->
    <!-- MDC["requestId"] set by RequestIdInterceptor -->
    <!-- MDC["ip"] set by AuthenticationFilter -->
    <property name="FILE_LOG_PATTERN"
              value="${FILE_LOG_PATTERN:-%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } [%t] --- %-40.40logger{39} : [%X{ip}][%X{requestId}][%X{currentUser}] %m%n}"/>
    <property name="MAX_LOG_FILE_SIZE" value="${MAX_LOG_FILE_SIZE:-50MB}"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="WebDebugAppender" class="com.baidu.oped.apm.config.log.WebDebugAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <if condition='isDefined("INFO_LOG_FILE_PATH")'>
        <then>
            <appender name="INFO_LOG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                    <level>INFO</level>
                </filter>
                <encoder>
                    <pattern>${FILE_LOG_PATTERN}</pattern>
                </encoder>
                <file>${INFO_LOG_FILE_PATH}</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
                    <fileNamePattern>log/mx-web.info_%i.log</fileNamePattern>
                    <minIndex>1</minIndex>
                    <maxIndex>30</maxIndex>
                </rollingPolicy>
                <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                    <maxFileSize>${MAX_LOG_FILE_SIZE}</maxFileSize>
                </triggeringPolicy>
            </appender>
        </then>
    </if>

    <if condition='isDefined("ERROR_LOG_FILE_PATH")'>
        <then>
            <appender name="ERROR_LOG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                    <level>ERROR</level>
                </filter>
                <encoder>
                    <pattern>${FILE_LOG_PATTERN}</pattern>
                </encoder>
                <file>${ERROR_LOG_FILE_PATH}</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
                    <fileNamePattern>log/mx-web.error_%i.log</fileNamePattern>
                    <minIndex>1</minIndex>
                    <maxIndex>15</maxIndex>
                </rollingPolicy>
                <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                    <maxFileSize>${MAX_LOG_FILE_SIZE}</maxFileSize>
                </triggeringPolicy>
            </appender>
        </then>
    </if>

    <if condition='isDefined("WARN_LOG_FILE_PATH")'>
        <then>
            <appender name="WARN_LOG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                    <level>WARN</level>
                </filter>
                <encoder>
                    <pattern>${FILE_LOG_PATTERN}</pattern>
                </encoder>
                <file>${WARN_LOG_FILE_PATH}</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
                    <fileNamePattern>log/mx-web.warn_%i.log</fileNamePattern>
                    <minIndex>1</minIndex>
                    <maxIndex>15</maxIndex>
                </rollingPolicy>
                <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                    <maxFileSize>${MAX_LOG_FILE_SIZE}</maxFileSize>
                </triggeringPolicy>
            </appender>
        </then>
    </if>

    <if condition='isDefined("DEBUG_LOG_FILE_PATH")'>
        <then>
            <appender name="DEBUG_LOG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                    <level>DEBUG</level>
                </filter>
                <encoder>
                    <pattern>${FILE_LOG_PATTERN}</pattern>
                </encoder>
                <file>${DEBUG_LOG_FILE_PATH}</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
                    <fileNamePattern>log/mx-web.debug_%i.log</fileNamePattern>
                    <minIndex>1</minIndex>
                    <maxIndex>90</maxIndex>
                </rollingPolicy>
                <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                    <maxFileSize>${MAX_LOG_FILE_SIZE}</maxFileSize>
                </triggeringPolicy>
            </appender>
        </then>
    </if>

    <appender name="DEBUG_LEVEL_REMAPPER" class="org.springframework.boot.logging.logback.LevelRemappingAppender">
        <destinationLogger>org.springframework.boot</destinationLogger>
    </appender>

</included>
